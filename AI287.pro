/*Три журналиста во время завтрака наблюдали за одним человеком.
При этом они сделали следующие записи.
Жюль. Сначала он выпил виски, затем съел утку с апельсинами и десерт. Наконец, он выпил кофе.
Жак. Он выпил аперитив, а затем съел пирог и грушу «прекрасная Елена».
Джим. Сначала он выпил виски, затем съел пирог и клубничный шербет. А закончил он завтрак чашкой кофе.
(Внимание. Все, что написал один из журналистов,— неправда, другой сделал лишь одну ложную запись, а третий — вообще никогда не лжет.)
Попытайтесь, исходя из этих противоречивых сообщений, определить, что выбрал на десерт человек, о котором шла речь?*/
DOMAINS
    имя, еда, порядок, истинность = symbol
    количество = integer
    
    блюдо = блюдо(порядок, еда)
    список_блюд=блюдо*
    список_истинности = истинность*
    список_списков = список_истинности*
PREDICATES 
    nondeterm входит_в(блюдо, список_блюд)
    nondeterm входит_в(список_истинности, список_списков)
    nondeterm найти_по_номеру(количество, истинность, список_истинности)

    nondeterm возможное_блюдо(блюдо)
    nondeterm возможная_истинность(истинность)
    nondeterm возможный_список_истинности(количество, список_истинности)

    nondeterm подсчет_количества_определенных_записей(список_истинности, истинность, количество)
    nondeterm проверка_количества_ложных_записей(список_списков)

    nondeterm записал(имя, количество, список_блюд)
    nondeterm проверить_запись(имя, количество, список_блюд, список_истинности) 
    nondeterm проверить_все_записи(имя, количество, список_блюд, список_истинности)
    
    nondeterm генерация_гипотезы(список_блюд)
    nondeterm найти_десерт(еда)
    
CLAUSES
%============================================================================================================
%--------------------------вспомогательные-предикаты---------------------------------------------------------
%============================================================================================================
%   Принадлежность элемента списку
    входит_в(X,[X|_]).
    входит_в(X,[_|Хвост]):-входит_в(X,Хвост).
%------------------------------------------------------------------------------------------------------------    
    % поиск в списке по номеру
    найти_по_номеру(Номер, X, [X|_]) :- Номер - 1 = 0.
    найти_по_номеру(Номер, X, [_|Хвост]) :- Номер_1 = Номер - 1,
                                            найти_по_номеру(Номер_1, X, Хвост).
%------------------------------------------------------------------------------------------------------------   
    подсчет_количества_определенных_записей([], _, 0).
    подсчет_количества_определенных_записей([Первый|Хвост_списка], Истинность, Количество):-

	                        подсчет_количества_определенных_записей(Хвост_списка, Истинность, Количество_1),
	                        Первый = Истинность,
	                        Количество = Количество_1 + 1.

    подсчет_количества_определенных_записей([Первый|Хвост_списка], Истинность, Количество):-

	                        подсчет_количества_определенных_записей(Хвост_списка, Истинность, Количество_1),
	                        not(Первый = Истинность),
	                        Количество = Количество_1.
%============================================================================================================
%------------------------------------------------------------------------------------------------------------ 
    возможное_блюдо(блюдо(сначала_выпил, виски)).
    возможное_блюдо(блюдо(сначала_выпил, аперитив)).
%-------------------------------------------------------------
    возможное_блюдо(блюдо(затем_съел, утка_с_апельсинами)).
    возможное_блюдо(блюдо(затем_съел, пирог)).
%-------------------------------------------------------------
    возможное_блюдо(блюдо(десерт, груша)).
    возможное_блюдо(блюдо(десерт, клубничный_щербет)).
%-------------------------------------------------------------
    возможное_блюдо(блюдо(запил, кофе)).
%------------------------------------------------------------------------------------------------------------ 
    возможная_истинность(истинно).
    возможная_истинность(ложно).
%------------------------------------------------------------------------------------------------------------
    возможный_список_истинности(0, []).
    возможный_список_истинности(Количество, Список) :- not(Количество = 0),
                                                       Количество_1 = Количество - 1,
                                                       возможный_список_истинности(Количество_1, Список_1),
                                                       возможная_истинность(Истинность),
                                                       Список = [Истинность | Список_1].
%------------------------------------------------------------------------------------------------------------
    проверка_количества_ложных_записей(Списки_истинностей) :-

                                                 входит_в(Список_1, Списки_истинностей),
                                                 входит_в(Список_2, Списки_истинностей),
                                                 входит_в(Список_3, Списки_истинностей),
                                                 not(Список_1 = Список_2), not(Список_1 = Список_3), not(Список_2 = Список_3),
                                                 % Все, что написал один из журналистов,— неправда,...
                                                 подсчет_количества_определенных_записей(Список_1, истинно, 0),
                                                 % ...другой сделал лишь одну ложную запись,...
                                                 подсчет_количества_определенных_записей(Список_2, ложно, 1),
                                                 % ...а третий — вообще никогда не лжет.
                                                 подсчет_количества_определенных_записей(Список_3, ложно, 0).
%------------------------------------------------------------------------------------------------------------
    % Жюль
    % Сначала он выпил виски
    записал(жуль, 1, Список_блюд) :- входит_в(блюдо(сначала_выпил, виски), Список_блюд).
    % затем съел утку с апельсинами
    записал(жуль, 2, Список_блюд) :- входит_в(блюдо(затем_съел, утка_с_апельсинами), Список_блюд).
    % Наконец, он выпил кофе.
    записал(жуль, 3, Список_блюд) :- входит_в(блюдо(запил, кофе), Список_блюд).

    % Жак
    % Он выпил аперитив
    записал(жак, 1, Список_блюд) :- входит_в(блюдо(сначала_выпил, аперитив), Список_блюд).
    % а затем съел пирог
    записал(жак, 2, Список_блюд) :- входит_в(блюдо(затем_съел, пирог), Список_блюд).
    % и грушу "прекрасная Елена".
    записал(жак, 3, Список_блюд) :- входит_в(блюдо(десерт, груша), Список_блюд).

    % Джим
    % Сначала он выпил виски
    записал(джим, 1, Список_блюд) :- входит_в(блюдо(сначала_выпил, виски), Список_блюд).
    % затем съел пирог
    записал(джим, 2, Список_блюд) :- входит_в(блюдо(затем_съел, пирог), Список_блюд).
    % и клубничный шербет.
    записал(джим, 3, Список_блюд) :- входит_в(блюдо(десерт, клубничный_щербет), Список_блюд).
    % А закончил он завтрак чашкой кофе.
    записал(джим, 4, Список_блюд) :- входит_в(блюдо(запил, кофе), Список_блюд).
%------------------------------------------------------------------------------------------------------------
    % в данном предикате ставятся в соответствие запись и истинность этой записи
    проверить_запись(Имя_журналиста, Номер_записи, Список_блюд, Список_истинности_журналиста) :-

                                                   записал(Имя_журналиста, Номер_записи, Список_блюд),
                                                   найти_по_номеру(Номер_записи, истинно, Список_истинности_журналиста).

    проверить_запись(Имя_журналиста, Номер_записи, Список_блюд, Список_истинности_журналиста) :-

                                                   not(записал(Имя_журналиста, Номер_записи, Список_блюд)),
                                                   найти_по_номеру(Номер_записи, ложно, Список_истинности_журналиста).
%------------------------------------------------------------------------------------------------------------
    проверить_все_записи(Имя_журналиста, 3, Список_блюд, Список_истинности_журналиста):- 

                                           проверить_запись(Имя_журналиста, 1, Список_блюд, Список_истинности_журналиста),
                                           проверить_запись(Имя_журналиста, 2, Список_блюд, Список_истинности_журналиста),
                                           проверить_запись(Имя_журналиста, 3, Список_блюд, Список_истинности_журналиста).

    проверить_все_записи(Имя_журналиста, 4, Список_блюд, Список_истинности_журналиста):- 

                                           проверить_запись(Имя_журналиста, 1, Список_блюд, Список_истинности_журналиста),
                                           проверить_запись(Имя_журналиста, 2, Список_блюд, Список_истинности_журналиста),
                                           проверить_запись(Имя_журналиста, 3, Список_блюд, Список_истинности_журналиста),
                                           проверить_запись(Имя_журналиста, 4, Список_блюд, Список_истинности_журналиста).
%------------------------------------------------------------------------------------------------------------ 
% Генерируем гипотезы, где гипотеза - это список из журналистов, свойства которых: имя, список сделанных записей
% и список истинности этих записей
    генерация_гипотезы(Завтрак) :-  возможный_список_истинности(3, Истинность_1),
                                    возможный_список_истинности(3, Истинность_2),
                                    возможный_список_истинности(4, Истинность_3),

                                    Списки_истинностей = [Истинность_1, Истинность_2, Истинность_3],
                                    проверка_количества_ложных_записей(Списки_истинностей),

                                    возможное_блюдо(Блюдо_1), Блюдо_1 = блюдо(сначала_выпил, _),
                                    возможное_блюдо(Блюдо_2), Блюдо_2 = блюдо(затем_съел, _),
                                    возможное_блюдо(Блюдо_3), Блюдо_3 = блюдо(десерт, _),
                                    возможное_блюдо(Блюдо_4), Блюдо_4 = блюдо(запил, _),

                                    Завтрак = [Блюдо_1, Блюдо_2, Блюдо_3, Блюдо_4],

                                    % проверяем гипотезу
                                    проверить_все_записи(жуль, 3, Завтрак, Истинность_1),
                                    проверить_все_записи(жак,  3, Завтрак, Истинность_2),
                                    проверить_все_записи(джим, 4, Завтрак, Истинность_3).
%------------------------------------------------------------------------------------------------------------
    % выводим решение из проверенных гипотез
    найти_десерт(Десерт) :- генерация_гипотезы(Завтрак),
                            входит_в(блюдо(десерт, Десерт), Завтрак).

    
GOAL 
    найти_десерт(Десерт).
    
    
    
    
    
    
