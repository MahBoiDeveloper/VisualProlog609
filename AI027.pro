/*
                Какое Мороженое самое вкусное?

Ирена любит мороженое с фруктами. В кафе был выбор из таких вариантов:

· пломбир с орехами;
· пломбир с бананами;
· пломбир с черникой;
· шоколадное с черникой;
· шоколадное с клубникой.

В четырёх вариантах Ирене не нравились или тип мороженого, или наполнитель,
а в одном варианте ей не нравились ни мороженое, ни наполнитель.
Она попросила приготовить из имеющихся продуктов порцию по своему вкусу.

Какое же мороженое и с какими фруктами любит Ирена?
*/

DOMAINS
    тип_мороженого, наполнитель = symbol
    вариант                     = вариант(тип_мороженого, наполнитель)
    список_вариантов            = вариант*

PREDICATES
    nondeterm возможный_тип_мороженого      (тип_мороженого)
    nondeterm возможный_наполнитель         (наполнитель)
    nondeterm возможный_вариант             (вариант)
    nondeterm не_понравилось_что_то_одно    (вариант, вариант)
    nondeterm не_понравились_оба            (вариант, вариант)
    nondeterm проверка_гипотезы             (вариант)
    nondeterm генерация_гипотезы            (вариант)
    nondeterm получить_проверенные_гипотезы (вариант)
    nondeterm входит_в                      (вариант, список_вариантов)
    nondeterm отбросить_повторы             (список_вариантов, список_вариантов)
    nondeterm получить_уникальные_решения   (список_вариантов)
    nondeterm поиск_решения                 (тип_мороженого, наполнитель)

CLAUSES
    возможный_тип_мороженого(пломбир).
    возможный_тип_мороженого(шоколадное).
    
    % "Какое же мороженое и с какими ФРУКТАМИ любит Ирена?" - орех не фрукт, поэтому его здесь нет
    возможный_наполнитель(бананы).
    возможный_наполнитель(черника).
    возможный_наполнитель(клубника).
    
    % В кафе был выбор из таких вариантов:
    возможный_вариант(вариант(пломбир, орехи)).
    возможный_вариант(вариант(пломбир, бананы)).
    возможный_вариант(вариант(пломбир, черника)).
    возможный_вариант(вариант(шоколадное, черника)).
    возможный_вариант(вариант(шоколадное, клубника)).
    
    % Ирене не нравились или тип мороженого, или наполнитель
    не_понравилось_что_то_одно(Правильный_вариант, Неверный_вариант)
    :-
        Правильный_вариант = вариант(Тип_мороженого_1, Наполнитель),
        Неверный_вариант   = вариант(Тип_мороженого_2, Наполнитель),
        not(Тип_мороженого_1 = Тип_мороженого_2)
    ;
        Правильный_вариант = вариант(Тип_мороженого, Наполнитель_1),
        Неверный_вариант   = вариант(Тип_мороженого, Наполнитель_2),
        not(Наполнитель_1 = Наполнитель_2)
    .
    
    % в одном варианте ей не нравились ни мороженое, ни наполнитель.
    не_понравились_оба(Правильный_вариант, Неверный_вариант)
    :-
        not(Правильный_вариант = Неверный_вариант)
    .
    
    % 
    проверка_гипотезы(Правильный_вариант)
    :-
        % В ЧЕТЫРЁХ вариантах Ирене не нравились...
        возможный_вариант(Неверный_вариант_1),
        возможный_вариант(Неверный_вариант_2),
        возможный_вариант(Неверный_вариант_3),
        возможный_вариант(Неверный_вариант_4),
        % а в ОДНОМ варианте ей не нравились...
        возможный_вариант(Полностью_не_подходит),
    
        % каждый непонравившися вариант отличается от другого
        not(Неверный_вариант_1 = Неверный_вариант_2), not(Неверный_вариант_1 = Неверный_вариант_3), not(Неверный_вариант_1 = Неверный_вариант_4),
        not(Неверный_вариант_2 = Неверный_вариант_3), not(Неверный_вариант_2 = Неверный_вариант_4),
        not(Неверный_вариант_3 = Неверный_вариант_4),
    
        not(Полностью_не_подходит = Неверный_вариант_1), not(Полностью_не_подходит = Неверный_вариант_2),
        not(Полностью_не_подходит = Неверный_вариант_3), not(Полностью_не_подходит = Неверный_вариант_4),
    
        не_понравилось_что_то_одно(Правильный_вариант, Неверный_вариант_1),
        не_понравилось_что_то_одно(Правильный_вариант, Неверный_вариант_2),
        не_понравилось_что_то_одно(Правильный_вариант, Неверный_вариант_3),
        не_понравилось_что_то_одно(Правильный_вариант, Неверный_вариант_4),
        не_понравились_оба(Правильный_вариант, Полностью_не_подходит)
    .
    
    % гипотеза - это подходящий Ирене вариант комбинации мороженого с наполнителем
    генерация_гипотезы(Правильный_вариант)
    :-
        возможный_тип_мороженого(Тип_мороженого),
        возможный_наполнитель(Наполнитель),
    
        Правильный_вариант = вариант(Тип_мороженого, Наполнитель)
    .
    
    % проверка всех гипотез
    получить_проверенные_гипотезы(Гипотеза)
    :-
        генерация_гипотезы(Гипотеза),
        проверка_гипотезы(Гипотеза)
    .
    
    % пердикат поиска
    входит_в(Первый, [Первый | _]).
    входит_в(Первый, [_ | Хвост])
    :-
        входит_в(Первый, Хвост)
    .
    
    % оставить уникальные решения и отсеять дубликаты
    отбросить_повторы([], []). 
    отбросить_повторы([Первый | Хвост], Список)
    :-
        отбросить_повторы(Хвост, Список_1),
        not(входит_в(Первый, Список_1)),
        Список = [Первый | Список_1]
    ;
        отбросить_повторы(Хвост, Список_1),
        входит_в(Первый, Список_1),
        Список = Список_1
    .
    
    
    получить_уникальные_решения(Список_решений)
    :-
        findall
        (
            Правильный_вариант,
            получить_проверенные_гипотезы(Правильный_вариант),
            Список
        ),
        отбросить_повторы(Список, Список_решений)
    .
    
    % получить ответ
    поиск_решения(Тип_мороженого, Наполнитель)
    :-
        получить_уникальные_решения(Список_решений),
        входит_в(Правильный_вариант, Список_решений),
        Правильный_вариант = вариант(Тип_мороженого, Наполнитель)
    .
        
GOAL
    поиск_решения(Тип_мороженого, Наполнитель).