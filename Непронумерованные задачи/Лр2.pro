/*Известно, что Заяц лжет по понедельникам, вторникам и средам, а в остальные дни говорит правду.
Лев лжет по четвергам, пятницам и субботам и говорит правду в остальные дни.
Однажды Заяц сказал: "Вчера был один из дней, когда я лгу",
на что Лев заметил:"Вчера был один из дней, когда я тоже лгу".
 
Определить день беседы. */
DOMAINS
        номер_дня = integer
        список_номеров_дней = номер_дня*
        имя, день_недели = symbol
        список_дней_когда_я_лгу = день_недели*
        зверь = зверь(имя, список_дней_когда_я_лгу)
PREDICATES
        nondeterm возможный_день_недели(номер_дня, день_недели)
        nondeterm дни_лжи(имя, список_дней_когда_я_лгу)
        nondeterm находим_какой_день_был_вчера(номер_дня, номер_дня)
        nondeterm входит_в(номер_дня, список_номеров_дней)
        nondeterm создать_список_номеров_дней(список_дней_когда_я_лгу, список_номеров_дней)
        nondeterm высказывание(имя, номер_дня, список_номеров_дней)
        nondeterm проверка_высказывания(зверь, номер_дня)
        nondeterm поиск_решения(день_недели)
CLAUSES
        возможный_день_недели(1, понедельник).
        возможный_день_недели(2, вторник).
        возможный_день_недели(3, среда).
        возможный_день_недели(4, четверг).
        возможный_день_недели(5, пятница).
        возможный_день_недели(6, суббота).
        возможный_день_недели(7, воскресенье).
%-----------------------------------
        %дни, когда лжет заяц
        дни_лжи(заяц, Список_дней_когда_я_лгу) :- Список_дней_когда_я_лгу = [понедельник, вторник, среда].
        %дни, когда лжет лев
        дни_лжи(лев, Список_дней_когда_я_лгу) :- Список_дней_когда_я_лгу = [четверг, пятница, суббота].
%-----------------------------------
        %вчера для понедельника - это воскресенье
        находим_какой_день_был_вчера(0, 7).
        находим_какой_день_был_вчера(Число, День) :- not(Число = 0),
                                                     День = Число.
%-----------------------------------
%       Заяц сказал: "Вчера был один из дней, когда я лгу"
        высказывание(заяц, Сегодня, Список_дней_когда_я_лгу) :- Вчера_1 = Сегодня - 1,
                                                    находим_какой_день_был_вчера(Вчера_1, Вчера),
                                                    входит_в(Вчера, Список_дней_когда_я_лгу).
%       Лев заметил:"Вчера был один из дней, когда я тоже лгу"
        высказывание(лев, Сегодня, Список_дней_когда_я_лгу) :- Вчера_1 = Сегодня - 1,
                                                   находим_какой_день_был_вчера(Вчера_1, Вчера),
                                                   входит_в(Вчера, Список_дней_когда_я_лгу).
%-----------------------------------
        %предикат поиска
        входит_в(День, [День|_]).
        входит_в(День, [_|Оставшиеся_дни]) :- входит_в(День, Оставшиеся_дни).
%-----------------------------------
        %предикат составления списка номеров дней по списку дней
        создать_список_номеров_дней([], []).
        создать_список_номеров_дней([День|Оставшиеся_дни], Список_номеров_дней) :- создать_список_номеров_дней(Оставшиеся_дни, Список_номеров_дней_1),
                                                                                   возможный_день_недели(Номер, День),
                                                                                   Список_номеров_дней = [Номер|Список_номеров_дней_1].
%-----------------------------------
        %если высказывание правдиво, и сегодня он не лжет
        проверка_высказывания(Говорящий, Сегодня) :- Говорящий = зверь(Имя, Список_дней_когда_я_лгу),
                                                     создать_список_номеров_дней(Список_дней_когда_я_лгу, Список_номеров_дней), 
                                                     высказывание(Имя, Сегодня, Список_номеров_дней),                                               
                                                     not(входит_в(Сегодня, Список_номеров_дней)).
        %если высказывание ложно, и сегодня он лжет
        проверка_высказывания(Говорящий, Сегодня) :- Говорящий = зверь(Имя, Список_дней_когда_я_лгу),
                                                     создать_список_номеров_дней(Список_дней_когда_я_лгу, Список_номеров_дней),
                                                     not(высказывание(Имя, Сегодня, Список_номеров_дней)),
                                                     входит_в(Сегодня, Список_номеров_дней).
%-----------------------------------                
        %Определяем генерацию гипотезы и ее проверку
        поиск_решения(День_недели) :- 
                %Определяем структуру зайца и льва
                дни_лжи(заяц, Список_дней_лжи_зайца), дни_лжи(лев, Список_дней_лжи_льва),
                Заяц = зверь(заяц, Список_дней_лжи_зайца),
                Лев = зверь(лев, Список_дней_лжи_льва),

                % Генерируем гипотезу, где гипотеза - это номер дня(Сегодня)
                % и соответствующий ему день недели
                возможный_день_недели(Сегодня, День_недели),

                %Проверяем гипотезу
                проверка_высказывания(Заяц, Сегодня),
                проверка_высказывания(Лев, Сегодня).
%-----------------------------------
GOAL
       поиск_решения(День_недели).
        
        
        
        
        
        
        
        
        
        
        