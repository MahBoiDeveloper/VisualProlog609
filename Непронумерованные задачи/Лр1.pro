/*Петя провел каникулы в деревне у бабушки.
По его наблюдениям: 6 paз с утра стояла солнечная погода; 
                    дождь шел 7 раз либо с утра, либо к вечеру;
                    если дождь шел к вечеру, то с утра стояла солнечная погода;
                    5 раз к вечеру устанавливалась солнечная погода; 
Сколько дней продолжались каникулы Пети?*/
DOMAINS
        номер, номер_дня, количество = integer
        время_суток, вид_погоды = symbol
        день = день(номер_дня, время_суток, вид_погоды)
        список_дней = день*
        список_количеств_дней = количество*
PREDICATES
        nondeterm возможное_время_суток(время_суток)
        nondeterm возможная_погода(вид_погоды)
        nondeterm было_солнечно(время_суток, количество)
        nondeterm был_дождь(количество)
        nondeterm максимум_дней(количество)
        nondeterm условие_дождя(номер, список_дней)
        nondeterm проверка_условий_дождя(список_дней)
        nondeterm сколько_раз(список_дней, время_суток, вид_погоды, количество)
        nondeterm добавить_в_конец(список_дней, день, список_дней)
        nondeterm подсчет_количества_элементов(количество, список_дней)
        nondeterm добавляем_день_в_гипотезу(номер_дня, список_дней, список_дней)
        nondeterm генерация_гипотезы(количество, список_дней)
        nondeterm итоговая_гипотеза(количество)
        nondeterm поиск_решения(количество, количество)
        nondeterm ответ(количество)
CLAUSES
        возможное_время_суток(утро).
        возможное_время_суток(вечер).
%------------------------------------------------ 
        возможная_погода(солнечно).
        возможная_погода(дождь).
%------------------------------------------------
        было_солнечно(утро, 6).
        было_солнечно(вечер, 5).
        был_дождь(7).
%------------------------------------------------
        %Дней в коникулах не может быть больше, чем количество наблюдений за погодой
        максимум_дней(Максимум) :- было_солнечно(утро, Количество_1),
                                   было_солнечно(вечер, Количество_2),
                                   был_дождь(Количество_3),
                                   Максимум = Количество_1 + Количество_2 + Количество_3.
%------------------------------------------------
        %Если дождь шел к вечеру, то с утра стояла солнечная погода
        условие_дождя(1, День) :- День = [день(_, утром, солнечно), день(_, вечером, дождь)].
        условие_дождя(1, День) :- not(День = [_, день(_, вечером, дождь)]).
%------------------------------------------------
        проверка_условий_дождя(День) :- условие_дождя(1, День).
%------------------------------------------------
        %Подсчет, сколько раз было солнечно утром, вечером, и сколько раз шел дождь
        сколько_раз([], _, _, 0).
        сколько_раз([день(_, Время_суток, Погода)|Хвост_списка], Время_суток, Погода, Количество):-
                                                             сколько_раз(Хвост_списка, Время_суток, Погода, Количество_1),
                                                             Количество = Количество_1 + 1.
        сколько_раз([День|Хвост_списка], Время_суток_1, Погода_1, Количество):- сколько_раз(Хвост_списка, Время_суток_1, Погода_1, Количество_1),
                                                               not(День = день(_, Время_суток_1, Погода_1)),
                                                               Количество = Количество_1.
%------------------------------------------------
        %Предикат, добавляющий элемент в конец списка
        добавить_в_конец([], Элемент, [Элемент]).
        добавить_в_конец([Первый|Исходный], Элемент, [Первый|Новый]) :- добавить_в_конец(Исходный, Элемент, Новый).
%------------------------------------------------
        %Одна итерация в генерации списка дней, составляющих каникулы
        добавляем_день_в_гипотезу(Номер, Каникулы_1, Каникулы) :- возможная_погода(Утром), возможная_погода(Вечером),
                                                                  День_утром = день(Номер, утром, Утром),
                                                                  День_вечером = день(Номер, вечером, Вечером),
                                                                  проверка_условий_дождя([День_утром, День_вечером]),
                                                                  добавить_в_конец(Каникулы_1, День_утром, Каникулы_2),
                                                                  добавить_в_конец(Каникулы_2, День_вечером, Каникулы).
%------------------------------------------------
        %Генерируем список дней, составлявших каникулы, в зависимости от количества этих дней
        генерация_гипотезы(0, []).
        генерация_гипотезы(Дней, Каникулы):- not(Дней = 0),
                                             Количество_дней = Дней - 1,
                                             генерация_гипотезы(Количество_дней, Каникулы_1),
                                             Номер_текущего_дня = Дней,
                                             добавляем_день_в_гипотезу(Номер_текущего_дня, Каникулы_1, Каникулы).
%------------------------------------------------
        %Определяем проверку гипотезы
        подсчет_количества_элементов(Дней, Каникулы):- максимум_дней(Максимум),
                                                       Дней <= Максимум,
                                                       сколько_раз(Каникулы, утром, солнечно, Утром),
                                                       сколько_раз(Каникулы, вечером, солнечно, Вечером),
                                                       сколько_раз(Каникулы, утром, дождь, Дождь_утром),
                                                       сколько_раз(Каникулы, вечером, дождь, Дождь_вечером),
                                                       Дождь = Дождь_утром + Дождь_вечером,
                                                       было_солнечно(утро, Утром), было_солнечно(вечер, Вечером), был_дождь(Дождь).
%------------------------------------------------
        %Проверяем каникулы на соответствие количественным условиям
        итоговая_гипотеза(Дней):- генерация_гипотезы(Дней, Каникулы),
                                  подсчет_количества_элементов(Дней, Каникулы).
%------------------------------------------------
        %Если гипотеза, соответствует всем условиям, то прекращаем выборку,
        %если нет, то увеличиваем гипотетическое количество дней в каникулах
        поиск_решения(Дней, Дней):- итоговая_гипотеза(Дней), !.
        поиск_решения(Дней, Дней_в_каникулах):- not(итоговая_гипотеза(Дней)),
                                                Дней_1 = Дней + 1,
                                                поиск_решения(Дней_1, Дней_в_каникулах).
%------------------------------------------------
        %Ищем, сколько было дней в каникулах, начиная с определяемого нами количества
        %(выбрано 9, т.к. поиск идет долго, но можно начать и с одного)
        ответ(Дней_в_каникулах):- поиск_решения(1, Дней_в_каникулах).
%------------------------------------------------
GOAL
        ответ(Дней_в_каникулах).