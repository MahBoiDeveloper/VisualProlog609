/*
                            Близнецы - лгуны

В лицее учатся два брата-близнеца – Вася и Дима.

Вася совершенно не может говорить правду по понедельникам, вторникам и средам,
хотя в остальные дни он неизменно правдив.

А Дима врет по вторникам, четвергам и субботам,
но в другие дни он говорит только правду.

Как-то я повстречал братьев и спросил одного из них:
- Скажи, пожалуйста, как тебя зовут?
Тот без малейшего колебания ответил:
- Вася.
- А какой сегодня день недели? – продолжал я расспросы.
- Вчера было воскресенье, - сказал мой собеседник.
- А завтра будет пятница, - добавил его брат.
- Подожди, как же так? – изумился я, обращаясь к брату моего собеседника. – Ты
уверен, что говоришь правду?
- Я всегда говорю правду по средам, - услышал я в ответ.

Решив, что говорить больше не о чем, братья пошли дальше, оставив меня в
полном недоумении. Но, подумав, я все-таки сообразил, кто из двух братьев был Вася, а
кто – Дима. Между прочим, по разговору можно установить и день недели, в который я
встретился с ними.

Попробуйте сообразить и вы.
*/
DOMAINS
        номер, номер_дня                   = integer
        имя, роль, день_недели, истинность = symbol
        список_дней                        = день_недели*
        структура_гипотезы                 = персонаж(имя, роль);
                                             день_разговора(день_недели)
        гипотеза                           = структура_гипотезы*
PREDICATES
        nondeterm возможная_роль                           (роль)
        nondeterm возможный_день_недели                    (номер_дня, день_недели)
        nondeterm входит_в                                 (день_недели, список_дней)
        nondeterm входит_в                                 (структура_гипотезы, гипотеза)
        nondeterm дни_лжи                                  (имя, список_дней)
        nondeterm найти_вчерашний_день                     (день_недели, день_недели)
        nondeterm найти_завтрашний_день                    (день_недели, день_недели)
        nondeterm говорит                                  (имя, день_недели, истинность)
        nondeterm высказывание                             (номер, роль, гипотеза)
        nondeterm проверка_высказываний_персонажа          (роль, гипотеза)
        nondeterm проверка_высказываний_обоих_собеседников (гипотеза)
        nondeterm генерация_и_проверка_гипотезы            (гипотеза)
        nondeterm поиск_решения                            (имя, имя, день_недели)
CLAUSES
        возможная_роль(собеседник).
        возможная_роль(брат).

        возможный_день_недели(1, понедельник).
        возможный_день_недели(2, вторник).
        возможный_день_недели(3, среда).
        возможный_день_недели(4, четверг).
        возможный_день_недели(5, пятница).
        возможный_день_недели(6, суббота).
        возможный_день_недели(7, воскресенье).
%-----------------------------------
        %предикат поиска
        входит_в(Первый, [Первый|_]).
        входит_в(Первый, [_|Хвост])
        :-
            входит_в(Первый, Хвост)
        .
%-----------------------------------
        %дни, когда лжет Вася
        дни_лжи("Вася", Список_дней_когда_я_лгу)
        :-
            Список_дней_когда_я_лгу = [понедельник, вторник, среда]
        .
        %дни, когда лжет Дима
        дни_лжи("Дима", Список_дней_когда_я_лгу)
        :-
            Список_дней_когда_я_лгу = [вторник, четверг, суббота]
        .
%-----------------------------------
        %найти вчерашний день
        найти_вчерашний_день(понедельник, воскресенье). %вчера для понедельника - это воскресенье
        найти_вчерашний_день(Сегодня, Вчера)
        :-
            not(Сегодня = понедельник),
            возможный_день_недели(Номер_сегодня, Сегодня),
            Номер_вчера = Номер_сегодня - 1,
            возможный_день_недели(Номер_вчера, Вчера)
        .
%-----------------------------------
        %найти завтрашний день
        найти_завтрашний_день(воскресенье, понедельник).
        найти_завтрашний_день(Сегодня, Завтра)
        :-
            not(Сегодня = воскресенье),
            возможный_день_недели(Номер_сегодня, Сегодня),
            Номер_завтра = Номер_сегодня + 1,
            возможный_день_недели(Номер_завтра, Завтра)
        .
%-----------------------------------
        % проверить истинность на текущий день
        говорит(Имя, День, правда)
        :-
            дни_лжи(Имя, Список_дней_лжи),
            not(входит_в(День, Список_дней_лжи))
        .

        говорит(Имя, День, ложь)
        :-
            дни_лжи(Имя, Список_дней_лжи),
            входит_в(День, Список_дней_лжи)
        .
%-----------------------------------
%       - Скажи, пожалуйста, как тебя зовут?
%       Тот без малейшего колебания ответил:
%       - Вася.
        высказывание(1, собеседник, Разговор)
        :-
            входит_в(персонаж("Вася", собеседник), Разговор)
        .

%       - А какой сегодня день недели? – продолжал я расспросы.
%       - Вчера было воскресенье, - сказал мой собеседник.
        высказывание(2, собеседник, Разговор)
        :-
            входит_в(день_разговора(Сегодня), Разговор),
            найти_вчерашний_день(Сегодня, воскресенье)
        .

%       - А завтра будет пятница, - добавил его брат.
        высказывание(1, брат, Разговор)
        :-
             входит_в(день_разговора(Сегодня), Разговор),
             найти_завтрашний_день(Сегодня, пятница)
        .

%       - Подожди, как же так? – изумился я, обращаясь к брату моего собеседника. – Ты
%       уверен, что говоришь правду?
%       - Я всегда говорю правду по средам, - услышал я в ответ.
        высказывание(2, брат, Разговор)
        :-
            входит_в(персонаж(Имя, брат), Разговор),
            говорит(Имя, среда, правда)
        .

%-----------------------------------
        проверка_высказываний_персонажа(Роль, Разговор)
        :-
            высказывание(1, Роль, Разговор),
            высказывание(2, Роль, Разговор),

            входит_в(персонаж(Имя, Роль), Разговор),
            входит_в(день_разговора(Сегодня), Разговор),
            говорит(Имя, Сегодня, правда)
        .

        проверка_высказываний_персонажа(Роль, Разговор)
        :-
            not(высказывание(1, Роль, Разговор)),
            not(высказывание(2, Роль, Разговор)),

            входит_в(персонаж(Имя, Роль), Разговор),
            входит_в(день_разговора(Сегодня), Разговор),
            говорит(Имя, Сегодня, ложь)
        .

%-----------------------------------
        проверка_высказываний_обоих_собеседников(Разговор)
        :-
            проверка_высказываний_персонажа(собеседник, Разговор),
            проверка_высказываний_персонажа(брат, Разговор)
        .
%-----------------------------------              
        %Определяем генерацию гипотезы и ее проверку
        генерация_и_проверка_гипотезы(Разговор)
        :-
            %генерация гипотезы
            возможная_роль(Роль_1),
            возможная_роль(Роль_2),
            not(Роль_1 = Роль_2),

            возможный_день_недели(_, Сегодня),

            Разговор = [персонаж("Вася", Роль_1), персонаж("Дима", Роль_2), день_разговора(Сегодня)],

            %Проверяем гипотезу
            проверка_высказываний_обоих_собеседников(Разговор)
        .

%-----------------------------------
        поиск_решения(Собеседник, Брат, День_недели)
        :-
            генерация_и_проверка_гипотезы(Разговор),
            входит_в(персонаж(Собеседник, собеседник), Разговор),
            входит_в(персонаж(Брат, брат), Разговор),
            входит_в(день_разговора(День_недели), Разговор)
        .
%-----------------------------------
GOAL
       поиск_решения(Собеседник, Брат, День_недели).